def parse_superblock(sb):
	d={}
	d['s_inodes_count']=int.from_bytes(sb[0:4],byteorder='little')
	s_blocks_count_lo=int.from_bytes(sb[4:8],byteorder='little')
	s_r_blocks_count_lo=int.from_bytes(sb[8:12],byteorder='little')
	s_free_blocks_count_lo=int.from_bytes(sb[12:16],byteorder='little')
	d['s_free_inodes_count']=int.from_bytes(sb[16:20],byteorder='little')
	d['s_first_data_block']=int.from_bytes(sb[20:24],byteorder='little')
	d['s_log_block_size']=int.from_bytes(sb[24:28],byteorder='little')
	d['s_log_cluster_size']=int.from_bytes(sb[28:32],byteorder='little')
	d['s_blocks_per_group']=int.from_bytes(sb[32:36],byteorder='little')
	d['s_clusters_per_group']=int.from_bytes(sb[36:40],byteorder='little')
	d['s_inodes_per_group']=int.from_bytes(sb[40:44],byteorder='little')
	d['s_mtime']=int.from_bytes(sb[44:48],byteorder='little')
	d['s_wtime']=int.from_bytes(sb[48:52],byteorder='little')
	d['s_mnt_count']=int.from_bytes(sb[52:54],byteorder='little')
	d['s_max_mnt_count']=int.from_bytes(sb[54:56],byteorder='little')
	d['s_magic']=int.from_bytes(sb[56:58],byteorder='little')
	d['s_state']=int.from_bytes(sb[58:60],byteorder='little')
	d['s_errors']=int.from_bytes(sb[60:62],byteorder='little')
	d['s_minor_rev_level']=int.from_bytes(sb[62:64],byteorder='little')
	d['s_lastcheck']=int.from_bytes(sb[64:68],byteorder='little')
	d['s_checkinterval']=int.from_bytes(sb[68:72],byteorder='little')
	d['s_creator_os']=int.from_bytes(sb[72:76],byteorder='little')
	d['s_rev_level']=int.from_bytes(sb[76:80],byteorder='little')
	d['s_def_resuid']=int.from_bytes(sb[80:82],byteorder='little')
	d['s_def_resgid']=int.from_bytes(sb[82:84],byteorder='little')
	d['s_first_ino']=int.from_bytes(sb[84:88],byteorder='little')
	d['s_inode_size']=int.from_bytes(sb[88:90],byteorder='little')
	d['s_block_group_nr']=int.from_bytes(sb[90:92],byteorder='little')
	d['s_feature_compat']=int.from_bytes(sb[92:96],byteorder='little')
	d['s_feature_incompat']=int.from_bytes(sb[96:100],byteorder='little')
	d['s_feature_ro_compat']=int.from_bytes(sb[100:104],byteorder='little')
	d['s_uuid']=int.from_bytes(sb[104:106],byteorder='little')
	d['s_volume_name']=int.from_bytes(sb[120:122],byteorder='little')
	d['s_last_mounted']=int.from_bytes(sb[136:144],byteorder='little')
	d['s_algorithm_usage_bitmap']=int.from_bytes(sb[200:204],byteorder='little')
	d['s_prealloc_blocks']=int.from_bytes(sb[204:205],byteorder='little')
	d['s_prealloc_dir_blocks']=int.from_bytes(sb[205:206],byteorder='little')
	d['s_reserved_gdt_blocks']=int.from_bytes(sb[206:208],byteorder='little')
	d['s_journal_uuid']=int.from_bytes(sb[208:210],byteorder='little')
	d['s_journal_inum']=int.from_bytes(sb[224:228],byteorder='little')
	d['s_journal_dev']=int.from_bytes(sb[228:232],byteorder='little')
	d['s_last_orphan']=int.from_bytes(sb[232:236],byteorder='little')
	d['s_hash_seed']=int.from_bytes(sb[236:252],byteorder='little')
	d['s_def_hash_version']=int.from_bytes(sb[252:253],byteorder='little')
	d['s_jnl_backup_type']=int.from_bytes(sb[253:254],byteorder='little')
	d['s_desc_size']=int.from_bytes(sb[254:256],byteorder='little')
	d['s_default_mount_opts']=int.from_bytes(sb[256:260],byteorder='little')
	d['s_first_meta_bg']=int.from_bytes(sb[260:264],byteorder='little')
	d['s_mkfs_time']=int.from_bytes(sb[264:268],byteorder='little')
	d['s_jnl_blocks']=int.from_bytes(sb[268:336],byteorder='little')
	s_blocks_count_hi=int.from_bytes(sb[336:340],byteorder='little')
	s_r_blocks_count_hi=int.from_bytes(sb[340:344],byteorder='little')
	s_free_blocks_count_hi=int.from_bytes(sb[344:348],byteorder='little')
	d['s_min_extra_isize']=int.from_bytes(sb[348:350],byteorder='little')
	d['s_want_extra_isize']=int.from_bytes(sb[350:352],byteorder='little')
	d['s_flags']=int.from_bytes(sb[352:356],byteorder='little')
	d['s_raid_stride']=int.from_bytes(sb[356:358],byteorder='little')
	d['s_mmp_interval']=int.from_bytes(sb[358:360],byteorder='little')
	d['s_mmp_block']=int.from_bytes(sb[360:368],byteorder='little')
	d['s_raid_stripe_width']=int.from_bytes(sb[368:372],byteorder='little')
	d['s_log_groups_per_flex']=int.from_bytes(sb[372:373],byteorder='little')
	d['s_checksum_type']=int.from_bytes(sb[373:374],byteorder='little')
	d['s_reserved_pad']=int.from_bytes(sb[374:376],byteorder='little')
	d['s_kbytes_written']=int.from_bytes(sb[376:384],byteorder='little')
	d['s_snapshot_inum']=int.from_bytes(sb[384:388],byteorder='little')
	d['s_snapshot_id']=int.from_bytes(sb[388:392],byteorder='little')
	d['s_snapshot_r_blocks_count']=int.from_bytes(sb[392:400],byteorder='little')
	d['s_snapshot_list']=int.from_bytes(sb[400:404],byteorder='little')
	d['s_error_count']=int.from_bytes(sb[404:408],byteorder='little')
	d['s_first_error_time']=int.from_bytes(sb[408:412],byteorder='little')
	d['s_first_error_ino']=int.from_bytes(sb[412:416],byteorder='little')
	d['s_first_error_block']=int.from_bytes(sb[416:424],byteorder='little')
	d['s_first_error_func']=int.from_bytes(sb[424:456],byteorder='little')
	d['s_first_error_line']=int.from_bytes(sb[456:460],byteorder='little')
	d['s_last_error_time']=int.from_bytes(sb[460:464],byteorder='little')
	d['s_last_error_ino']=int.from_bytes(sb[464:468],byteorder='little')
	d['s_last_error_line']=int.from_bytes(sb[468:472],byteorder='little')
	d['s_last_error_block']=int.from_bytes(sb[472:480],byteorder='little')
	d['s_last_error_func']=int.from_bytes(sb[480:512],byteorder='little')
	d['s_mount_opts']=int.from_bytes(sb[512:576],byteorder='little')
	d['s_usr_quota_inum']=int.from_bytes(sb[576:580],byteorder='little')
	d['s_grp_quota_inum']=int.from_bytes(sb[580:584],byteorder='little')
	d['s_overhead_blocks']=int.from_bytes(sb[584:588],byteorder='little')
	d['s_backup_bgs']=int.from_bytes(sb[588:596],byteorder='little')
	d['s_encrypt_algos']=int.from_bytes(sb[596:600],byteorder='little')
	d['s_encrypt_pw_salt']=int.from_bytes(sb[600:616],byteorder='little')
	d['s_lpf_ino']=int.from_bytes(sb[616:620],byteorder='little')
	d['s_prj_quota_inum']=int.from_bytes(sb[620:624],byteorder='little')
	d['s_checksum_seed']=int.from_bytes(sb[624:628],byteorder='little')
	d['s_reserved']=int.from_bytes(sb[628:1020],byteorder='little')
	d['s_checksum']=int.from_bytes(sb[1020:1024],byteorder='little')

	#- Handling hi/lo fields
	d['s_free_blocks_count'] = (s_free_blocks_count_hi<<32) + s_free_blocks_count_lo
	d['s_blocks_count'] = (s_blocks_count_hi<<32) + s_blocks_count_lo
	d['s_r_blocks_count'] = (s_r_blocks_count_hi<<32) + s_r_blocks_count_lo
	return d
